{"ast":null,"code":"var _jsxFileName = \"D:\\\\final-year-project\\\\client\\\\src\\\\pages\\\\RecomForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GoogleImages = () => {\n  _s();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [imageUrls, setImageUrls] = useState([]);\n  useEffect(() => {\n    const fetchImages = async () => {\n      try {\n        const response = await fetch(`/googleImages?q=${searchQuery}`);\n        const data = await response.json();\n        setImageUrls(data);\n      } catch (error) {\n        console.error(error);\n        // Handle error here\n      }\n    };\n\n    if (searchQuery !== '') {\n      fetchImages();\n    }\n  }, [searchQuery]);\n  const handleSearch = event => {\n    event.preventDefault();\n    // Trigger the image search when the form is submitted\n    setSearchQuery(event.target.elements.search.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imageUrls.map((imageUrl, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageUrl,\n        alt: `Image ${index + 1}`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(GoogleImages, \"sZ9eewiYIOcjJTgpmejKoYaumeA=\");\n_c = GoogleImages;\nexport default GoogleImages;\nvar _c;\n$RefreshReg$(_c, \"GoogleImages\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GoogleImages","_s","searchQuery","setSearchQuery","imageUrls","setImageUrls","fetchImages","response","fetch","data","json","error","console","handleSearch","event","preventDefault","target","elements","search","value","children","onSubmit","type","name","fileName","_jsxFileName","lineNumber","columnNumber","map","imageUrl","index","src","alt","_c","$RefreshReg$"],"sources":["D:/final-year-project/client/src/pages/RecomForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst GoogleImages = () => {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [imageUrls, setImageUrls] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchImages = async () => {\r\n      try {\r\n        const response = await fetch(`/googleImages?q=${searchQuery}`);\r\n        const data = await response.json();\r\n        setImageUrls(data);\r\n      } catch (error) {\r\n        console.error(error);\r\n        // Handle error here\r\n      }\r\n    };\r\n\r\n    if (searchQuery !== '') {\r\n      fetchImages();\r\n    }\r\n  }, [searchQuery]);\r\n\r\n  const handleSearch = (event) => {\r\n    event.preventDefault();\r\n    // Trigger the image search when the form is submitted\r\n    setSearchQuery(event.target.elements.search.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSearch}>\r\n        <input type=\"text\" name=\"search\" />\r\n        <button type=\"submit\">Search</button>\r\n      </form>\r\n\r\n      <div>\r\n        {imageUrls.map((imageUrl, index) => (\r\n          <img key={index} src={imageUrl} alt={`Image ${index + 1}`} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoogleImages;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,MAAMS,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,mBAAkBN,WAAY,EAAC,CAAC;QAC9D,MAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCL,YAAY,CAACI,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACpB;MACF;IACF,CAAC;;IAED,IAAIT,WAAW,KAAK,EAAE,EAAE;MACtBI,WAAW,CAAC,CAAC;IACf;EACF,CAAC,EAAE,CAACJ,WAAW,CAAC,CAAC;EAEjB,MAAMW,YAAY,GAAIC,KAAK,IAAK;IAC9BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB;IACAZ,cAAc,CAACW,KAAK,CAACE,MAAM,CAACC,QAAQ,CAACC,MAAM,CAACC,KAAK,CAAC;EACpD,CAAC;EAED,oBACEpB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAMsB,QAAQ,EAAER,YAAa;MAAAO,QAAA,gBAC3BrB,OAAA;QAAOuB,IAAI,EAAC,MAAM;QAACC,IAAI,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnC5B,OAAA;QAAQuB,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eAEP5B,OAAA;MAAAqB,QAAA,EACGhB,SAAS,CAACwB,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC7B/B,OAAA;QAAiBgC,GAAG,EAAEF,QAAS;QAACG,GAAG,EAAG,SAAQF,KAAK,GAAG,CAAE;MAAE,GAAhDA,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA6C,CAC7D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAzCID,YAAY;AAAAiC,EAAA,GAAZjC,YAAY;AA2ClB,eAAeA,YAAY;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}